#update img {
		float: left;
		width: 130px;
		margin-right: 10px;
		border-radius: 10px;
}

#update h2 {
		margin: 0;
		padding: 0;
		font-size: 19.2px;
		font-size: 1.2rem;
		padding-top: 15px;
		padding-bottom: 10px;
		font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
		color: #333;
		border-bottom: 1px dotted #333;
		margin-bottom: 10px;
}

#searcharea input {
		width: 50%;
}

#searcharea p {
		margin: 0;
		line-height: 1em;
		padding-bottom: 15px;
}

@font-face {
		font-family: Alice;
		font-style: normal;
		font-weight: 400;
		src: local("Alice Regular"),local(Alice-Regular),url(//fonts.gstatic.com/s/alice/v8/sZyKh5NKrCk1xkCk_F1S8A.eot?#) format("eot"),url(//fonts.gstatic.com/s/alice/v8/l5RFQT5MQiajQkFxjDLySg.woff2) format("woff2"),url(//fonts.gstatic.com/s/alice/v8/_H4kMcdhHr0B8RDaQcqpTA.woff) format("woff");
}

/*Variables*/

:root {

 /*custom properties*/
/*Custom media*/
}

/* root */

/* Fonts */

body {
   font-family: "Alice";
}

/*! HTML5 Boilerplate v5.3.0 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Custom CSS
   ========================================================================== */

.responsive {
       font-size: calc(16px + 20 * ((100vw - 420px) / 860));
   }

@media screen and (min-width: 1280px) {

		.responsive {
				font-size: 36px;
		}
}

@media screen and (max-width: 420px) {

		.responsive {
				font-size: 16px;
		}
}

/*
we can specify global variable to use flexbox as default instead of floats

@lost flexbox flex;
*/

/* Grids */

.grid-item {
	background: rgb(107, 120, 133);
	height: 100px;
	margin-bottom: 20px;
}

.grid-one {
	width: 100%; /* must be declared on parent*/
}

.grid-one:before { /* must be declared on parent*/ content: ''; display: table;
}

.grid-one:after { /* must be declared on parent*/ content: ''; display: table; clear: both;
}

.grid-one div {
	width: calc(99.9% * 1/1 - (30px - 30px * 1/1))
}

.grid-one div:nth-child(1n) {
		float: left;
		margin-right: 30px;
		clear: none
}

.grid-one div:last-child {
		margin-right: 0
}

.grid-one div:nth-child(1n) {
		margin-right: 0;
		float: right
}

.grid-one div:nth-child(1n + 1) {
		clear: both
}

@media (min-width: 576px) {

		.grid-one div {
		width: calc(99.9% * 1/2 - (30px - 30px * 1/2));
		}

		.grid-one div:nth-child(1n) {
				float: left;
				margin-right: 30px;
				clear: none;
		}

		.grid-one div:last-child {
				margin-right: 0;
		}

		.grid-one div:nth-child(2n) {
				margin-right: 0;
				float: right;
		}

		.grid-one div:nth-child(2n + 1) {
				clear: both;
		}
	}

@media (min-width: 768px) {

		.grid-one div {
		width: calc(99.9% * 1/3 - (30px - 30px * 1/3));
		}

		.grid-one div:nth-child(1n) {
				float: left;
				margin-right: 30px;
				clear: none;
		}

		.grid-one div:last-child {
				margin-right: 0;
		}

		.grid-one div:nth-child(3n) {
				margin-right: 0;
				float: right;
		}

		.grid-one div:nth-child(3n + 1) {
				clear: both;
		}
	}

@media (min-width: 992px) {

		.grid-one div {
		width: calc(99.9% * 1/6 - (30px - 30px * 1/6));
		}

		.grid-one div:nth-child(1n) {
				float: left;
				margin-right: 30px;
				clear: none;
		}

		.grid-one div:last-child {
				margin-right: 0;
		}

		.grid-one div:nth-child(6n) {
				margin-right: 0;
				float: right;
		}

		.grid-one div:nth-child(6n + 1) {
				clear: both;
		}
	}

.nested-grid {
	background: red;
	height: 50px;
	margin-bottom: 10px;
}

/*		VERTICAL GRID 		*/

.grid-two {
	width: 100%;
	height: 500px;
	/* we can use lost center instead of lost utility: clearfix. Also second propertu in this is for padding(left, right)*/
	max-width:80%;
	margin-left:auto;
	margin-right:auto;
	padding-left:48px;
	padding-right:48px;
	max-width:80%;
	margin-left:auto;
	margin-right:auto;
	padding-left:3rem;
	padding-right:3rem;
	padding-top: 48px;
	padding-top: 3rem;
	background: rgb(166, 166, 166);
}

.grid-two:before {
	/* we can use lost center instead of lost utility: clearfix. Also second propertu in this is for padding(left, right)*/
	content: '';
	display: table;
}

.grid-two:after {
	/* we can use lost center instead of lost utility: clearfix. Also second propertu in this is for padding(left, right)*/
	content: '';
	display: table;
	clear: both;
}

.grid-two:before {
	/* we can use lost center instead of lost utility: clearfix. Also second propertu in this is for padding(left, right)*/
	content: '';
	display: table;
}

.grid-two:after {
	/* we can use lost center instead of lost utility: clearfix. Also second propertu in this is for padding(left, right)*/
	content: '';
	display: table;
	clear: both;
}

.grid-two div {
	/* lost row is for vertical grid */
	width: 100%;
	height: calc(99.9% * 1/5 - (30px - 30px * 1/5));
	margin-bottom: 30px;
	position: relative;
}

.grid-two div:last-child {
	/* lost row is for vertical grid */
	margin-bottom: 0;
}

.grid-two div > * {
	/* lost row is for vertical grid */
	position: absolute;
	top: 50%;
	right: auto;
	bottom: auto;
	left: 50%;
	transform: translate(-50%, -50%);
}

.grid-two div p{
	margin: 0;
}

/*  Waffle Grid*/

.grid-three {
	width: 100%;
	max-width: 80%;
	margin-left: auto;
	margin-right: auto;
	padding-left: 48px;
	padding-right: 48px;
	max-width: 80%;
	margin-left: auto;
	margin-right: auto;
	padding-left: 3rem;
	padding-right: 3rem;
	height: 100vh;
}

.grid-three:before {
		content: '';
		display: table;
}

.grid-three:after {
		content: '';
		display: table;
		clear: both;
}

.grid-three:before {
		content: '';
		display: table;
}

.grid-three:after {
		content: '';
		display: table;
		clear: both;
}

.grid-three div {
	width: calc(99.9% * 1/1 - (30px - 30px * 1/1));
	font-size: 2em;
	background: rgb(166, 107, 0)
}

.grid-three div:nth-child(1n) {
		float: left;
		margin-right: 30px;
		clear: none
}

.grid-three div:last-child {
		margin-right: 0
}

.grid-three div:nth-child(1n) {
		margin-right: 0;
		float: right
}

.grid-three div:nth-child(1n + 1) {
		clear: both
}

@media (min-width: 576px) {

		.grid-three div {
		width: calc(99.9% * 1/2 - (30px - 30px * 1/2));
		}

		.grid-three div:nth-child(1n) {
				float: left;
				margin-right: 30px;
				clear: none;
		}

		.grid-three div:last-child {
				margin-right: 0;
		}

		.grid-three div:nth-child(2n) {
				margin-right: 0;
				float: right;
		}

		.grid-three div:nth-child(2n + 1) {
				clear: both;
		}
	}

@media (min-width: 768px) {

		.grid-three div {
		width: calc(99.9% * 1/3 - (30px - 30px * 1/3));
		}

		.grid-three div:nth-child(1n) {
				float: left;
				margin-right: 30px;
				clear: none;
		}

		.grid-three div:last-child {
				margin-right: 0;
		}

		.grid-three div:nth-child(3n) {
				margin-right: 0;
				float: right;
		}

		.grid-three div:nth-child(3n + 1) {
				clear: both;
		}
	}

@media (min-width: 992px) {

		.grid-three div {
		width: calc(99.9% * 1/4 - (30px - 30px * 1/4));
		height: calc(99.9% * 1/4 - (30px - 30px * 1/4));
		}

		.grid-three div:nth-child(1n) {
				float: left;
				margin-right: 30px;
				margin-bottom: 30px;
				clear: none;
		}

		.grid-three div:last-child {
				margin-right: 0;
				margin-bottom: 0;
		}

		.grid-three div:nth-child(4n) {
				margin-right: 0;
		}

		.grid-three div:nth-child(4n + 1) {
				clear: both;
		}

		.grid-three div:nth-last-child(-n + 4) {
				margin-bottom: 0;
		}
	}

/*  Flexbox Grid  */

.grid-four {
	width: 100%;
	display: flex;
	flex-flow: row wrap;
	max-width: 80%;
	margin-left: auto;
	margin-right: auto;
	padding-left: 48px;
	padding-right: 48px;
	display: flex;
	flex-flow: row wrap;
	max-width: 80%;
	margin-left: auto;
	margin-right: auto;
	padding-left: 3rem;
	padding-right: 3rem;
	height: 60vh;
}

.grid-four div {
	width: calc(99.9% * 1/1 - (30px - 30px * 1/1));
	font-size: 2em;
	background: rgb(0, 102, 102)
}

.grid-four div:nth-child(1n) {
		float: left;
		margin-right: 30px;
		clear: none
}

.grid-four div:last-child {
		margin-right: 0
}

.grid-four div:nth-child(1n) {
		margin-right: 0;
		float: right
}

.grid-four div:nth-child(1n + 1) {
		clear: both
}

@media (min-width: 576px) {

		.grid-four div {
		width: calc(99.9% * 1/2 - (30px - 30px * 1/2));
		}

		.grid-four div:nth-child(1n) {
				float: left;
				margin-right: 30px;
				clear: none;
		}

		.grid-four div:last-child {
				margin-right: 0;
		}

		.grid-four div:nth-child(2n) {
				margin-right: 0;
				float: right;
		}

		.grid-four div:nth-child(2n + 1) {
				clear: both;
		}
	}

@media (min-width: 768px) {

		.grid-four div {
		width: calc(99.9% * 1/3 - (30px - 30px * 1/3));
		}

		.grid-four div:nth-child(1n) {
				float: left;
				margin-right: 30px;
				clear: none;
		}

		.grid-four div:last-child {
				margin-right: 0;
		}

		.grid-four div:nth-child(3n) {
				margin-right: 0;
				float: right;
		}

		.grid-four div:nth-child(3n + 1) {
				clear: both;
		}
	}

@media (min-width: 992px) {

		.grid-four div {
		flex-grow: 0;
		flex-shrink: 0;
		flex-basis: calc(99.9% * 1/4 - (30px - 30px * 1/4));
		width: calc(99.9% * 1/4 - (30px - 30px * 1/4));
		}

		.grid-four div:nth-child(1n) {
				margin-right: 30px;
				margin-left: 0;
		}

		.grid-four div:last-child {
				margin-right: 0;
		}

		.grid-four div:nth-child(4n) {
				margin-right: 0;
				margin-left: auto;
		}
	}

/* html setup */

/*<div>
        <section class="grid-one">
        <div class="grid-item">
            <div class="nested-grid"></div>
            <div class="nested-grid"></div>
        </div>
        <div class="grid-item"></div>
        <div class="grid-item"></div>
        <div class="grid-item"></div>
        <div class="grid-item"></div>
        <div class="grid-item"></div>
    </section>
    <section class="grid-one">
        <div class="grid-item">
            <div class="nested-grid"></div>
            <div class="nested-grid"></div>
        </div>
        <div class="grid-item"></div>
        <div class="grid-item"></div>
        <div class="grid-item"></div>
        <div class="grid-item"></div>
        <div class="grid-item"></div>
    </section>
    </div>

    <div>
        <section class="grid-two">
        <div class="grid-item">
            <div class="nested-grid"></div>
            <div class="nested-grid"></div>
        </div>
        <div class="grid-item"><p>This is paragraph!</p></div>
        <div class="grid-item"><p>This is paragraph!</p></div>
        <div class="grid-item"><p>This is paragraph!</p></div>
    </section>
    </div>

    <div>
        <section class="grid-three">
        <div class="grid-item">1</div>
        <div class="grid-item">2</div>
        <div class="grid-item">3</div>
        <div class="grid-item">4</div>
        <div class="grid-item">5</div>
        <div class="grid-item">6</div>
        <div class="grid-item">7</div>
        <div class="grid-item">8</div>
        <div class="grid-item">9</div>
        <div class="grid-item">10</div>
        <div class="grid-item">11</div>
        <div class="grid-item">12</div>
    </section>
    </div>

    <div>
        <section class="grid-four">
        <div class="grid-item">1</div>
        <div class="grid-item">2</div>
        <div class="grid-item">3</div>
        <div class="grid-item">4</div>
        <div class="grid-item">5</div>
        <div class="grid-item">6</div>
        <div class="grid-item">7</div>
        <div class="grid-item">8</div>
        <div class="grid-item">9</div>
        <div class="grid-item">10</div>
        <div class="grid-item">11</div>
        <div class="grid-item">12</div>
    </section>
    </div>*/

body {
	background: #DAD7C7;
}

#searcharea {
	margin: 3% auto;
	text-align: center;
	background: #bf996b;
	padding: 10px;
	width: 50%;
	border-radius: 10px 10px 0 0
}

#searcharea label {
		font-size: 28.8px;
		font-size: 1.8rem;
		text-transform: uppercase;
		color: rgb(116, 20, 20);
}

#update {
	font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
	width: 55%;
	background: rgba(191, 153, 107, 0.3);	
	margin: 0 auto;
	border-top: 1px solid #333;
	padding: 0 3%;
	padding-bottom: 50px
}

#update ul {
		list-style: none;
		margin: 0;
		padding: 0;
}

#update ul li {
			width: 100%;
			padding: 0 30px;
			padding-bottom: 15px;
			text-align: justify;

			animation: myanim 1s;
			transition: height 1s ease-in;
}

@keyframes myanim {
	0% { opacity: 0.3;}
	100% { opacity: 1;};
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

/*.hidden {
    display: none !important;
}*/

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print, (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
    *,
    *:before,
    *:after,
    *:first-letter,
    *:first-line {
        background: transparent !important;
        color: #000 !important; /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: "";
    }

    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    img {
        max-width: 100% !important;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
/*# sourceMappingURL=main.css.map */
